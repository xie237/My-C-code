//sort超时版本
#include<iostream>
#include<vector>
#include<cmath>
#include<algorithm>
using namespace std;
int main()
{
    int numOfcompetitor,winrate;
    cin>>numOfcompetitor>>winrate;
    vector<int>grade;
    vector<int>result;
    for(int i=0;i<numOfcompetitor;i++){
        int score;
        cin>>score;
        grade.push_back(score);
        double n=(i+1)*winrate/100.00;
        int min_winrate=max(1,(int)floor(n));
        sort(grade.begin(),grade.end(),greater<int>());
        int num=grade[min_winrate-1];
        result.push_back(num);
    }
    for(int i=0;i<result.size();i++){
        cout<<result[i];
        if(i!=result.size()-1) cout<<" ";
    }
    return 0;
}

//插入排序超时版本
#include<iostream>
#include<vector>
#include<cmath>
#include<algorithm>
using namespace std;
int main()
{
    int numOfcompetitor,winrate;
    cin>>numOfcompetitor>>winrate;
    vector<int>grade;
    vector<int>result;
    for(int i=0;i<numOfcompetitor;i++){
        int score;
        cin>>score;
        auto it = lower_bound(grade.begin(), grade.end(), score, greater<int>());
        grade.insert(it, score);
        double n=(i+1)*winrate/100.00;
        int min_winrate=max(1,(int)floor(n));
        sort(grade.begin(),grade.end(),greater<int>());
        int num=grade[min_winrate-1];
        result.push_back(num);
    }
    for(int i=0;i<result.size();i++){
        cout<<result[i];
        if(i!=result.size()-1) cout<<" ";
    }
    return 0;
}

