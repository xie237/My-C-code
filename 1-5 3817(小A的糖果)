#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;
int main() {
    ios::sync_with_stdio(false);
    cin.tie(0);

    int n;
    long long x;
    cin >> n >> x;
    vector<long long> a(n);

    for (int i = 0; i < n; i++) {
        cin >> a[i];
    }
    long long total = 0;
    for (int i = 0; i < n - 1; i++) {
        if (a[i] + a[i + 1] > x) {
            long long excess = a[i] + a[i + 1] - x;
            total += excess;
            if (a[i + 1] >= excess) {
                a[i + 1] -= excess;
            }
            else {
                excess -= a[i + 1];
                a[i + 1] = 0;
                a[i] -= excess;
            }
        }
    }
    cout << total;
    return 0;
}


//最开始用3个一滑滑动窗口做错了
#include<iostream>
#include<vector>
using namespace std;
int main()
{
    int n, x;
    cin >> n >> x;
    vector<int> q(n);
    for (int i = 0;i < n;i++)
    {
        cin >> q[i];
    }
    int total_cost = 0;
    for (int i = 0;i <= n - 3;i++)
    {
        int a = q[i]; int b = q[i + 1]; int c = q[i + 2];
        do {
            if (a + b <= x && b + c <= x) break;//满足条件返回
            if ((a >= x || c >= x) && b != 0)
            {
                if (a >= x && b != 0) { total_cost += (a - x); a -= x; q[i] = a; }
                if (c >= x && b != 0) { total_cost += (c - x); c -= x; q[i + 2] = c; }
                total_cost += b;
                b = 0;q[i + 1] = 0;
            }
            else if ((a < x || c < x) && b != 0)
            {
                if (a < x && b != 0) { total_cost += (a + b - x); b = x - a; q[i + 1] = b; }
                if (c < x && b != 0) { total_cost += (c + b - x); b = x - c; q[i + 1] = b; }
            }
            else if (b == 0)
            {
                if (a >= x) { total_cost += (a - x); a -= x; q[i] = a; }
                if (c >= x) { total_cost += (c - x); c -= x; q[i + 2] = c; }
            }
        } while (true);
    }
    cout << total_cost;
    return 0;
}
