#include<stdio.h>
#include<math.h>
int main(){
    double n = 23333333,sum = 0;
    int o = 0,l = 0;
    for(o = 0;o <= n/2;o++){
        sum = 0;
        sum -= o*(o / n) * log2(o / n) + (n - o)*((n - o) / n) * log2((n - o) / n);
        if(sum > 11625907.5 && sum < 11625907.6){
            printf("%d",o);
            break;
        }
    }
    return 0;
}

输出0(wrong)二分
#include <iostream>
#include <cmath>
using namespace std;

double compute_sum(double o, double n) {
    if (o == 0 || o == n) return 0;  // 避免 log(0)
    double term1 = (o * o / n) * log2(o / n);
    double term2 = ((n - o) * (n - o) / n) * log2((n - o) / n);
    return -(term1 + term2);
}

int main() {
    double n = 23333333;
    double target = 11625907.5798;
    double epsilon = 1e-6;

    int low = 1, high = n / 2, ans = 0;
    while (low <= high) {
        int mid = (low + high) / 2;
        double sum = compute_sum(mid, n);

        if (abs(sum - target) < epsilon) {
            ans = mid;
            break;
        } else if (sum < target) {
            low = mid + 1;
        } else {
            high = mid - 1;
        }
    }
    cout << ans << endl;
    return 0;
}

对的
#include <iostream>
#include <cmath>
using namespace std;

double compute_sum(double o, double n) {
    if (o == 0 || o == n) return 0;
    double p = o / n;
    double q = (n - o) / n;
    return -(o * p * log2(p) + (n - o) * q * log2(q));
}

int main() {
    double n = 23333333;
    double target = 11625907.5798;
    double epsilon = 1e-2;  // 放宽精度

    for (int o = 1; o <= n / 2; o++) {
        double sum = compute_sum(o, n);
        if (abs(sum - target) < epsilon) {
            cout << o << endl;
            return 0;
        }
    }
    cout << "Not found" << endl;
    return 0;
}