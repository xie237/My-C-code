#include<stdio.h>

#include<string.h>

int num[1010], pos = 0;

int main()

{

	char ch;

	int i, j;

	memset(num, 0, sizeof num);

	ch = getchar();

	while(ch != '@'){

		if(ch == '.'){

			pos ++;

		}

		else if(ch >= '0' && ch <= '9'){

			num[pos] = num[pos] * 10 + ch - '0';

		}

		else if(ch == '+'){

			num[pos - 2] = num[pos - 2] + num[pos - 1];

			pos --;

			num[pos] = 0;

		}

		else if(ch == '-'){

			num[pos - 2] = num[pos - 2] - num[pos - 1];

			pos --;

			num[pos] = 0;

		}

		else if(ch == '*'){

			num[pos - 2] = num[pos - 2] * num[pos - 1];

			pos --;

			num[pos] = 0;

		}		

		else if(ch == '/'){

			num[pos - 2] = num[pos - 2] / num[pos - 1];

			pos --;

			num[pos] = 0;

		}

		ch = getchar();

	}

	printf("%d", num[0]);

	return 0;
//所谓后缀表达式是指这样的一个表达式：式中不再引用括号，运算符号放在两个运算对象之后，所有计算按运算符号出现的顺序，严格地由左而右新进行（不用考虑运算符的优先级）。

本题中运算符仅包含 +-*/+-*/。保证对于 // 运算除数不为 0。特别地，其中 // 运算的结果需要向 0 取整（即与 C++ / 运算的规则一致）。

如：3*(5-2)+73*(5-2)+7 对应的后缀表达式为：3.5.2.-*7.+@3.5.2.-*7.+@。在该式中，@ 为表达式的结束符号。. 为操作数的结束符号。
输入格式

输入一行一个字符串 ss，表示后缀表达式。
输出格式

输出一个整数，表示表达式的值。
输入输出样例
输入 #1

3.5.2.-*7.+@

输出 #1

16

输入 #2

10.28.30./*7.-@

输出 #2

-7

说明/提示

数据保证，1≤∣s∣≤501≤∣s∣≤50，答案和计算过程中的每一个值的绝对值不超过 109109。

}
