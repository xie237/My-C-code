#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

// 手动实现计算最大公约数
int custom_gcd(int a, int b) {
    while (b != 0) {
        int temp = b;
        b = a % b;
        a = temp;
    }
    return a;
}

int main() {
    int n;
    cin >> n;
    vector<int> a(n);
    for (int i = 0; i < n; ++i) {
        cin >> a[i];
    }
    sort(a.begin(), a.end());
    
    if (a.front() == a.back()) {
        // 所有数相同，公差为0，直接输出项数
        cout << n << endl;
        return 0;
    }
    
    // 计算所有相邻差值的GCD作为公差
    int d = a[1] - a[0];
    for (int i = 2; i < n; ++i) {
        int diff = a[i] - a[i - 1];
        d = custom_gcd(d, diff);
    }
    
    // 计算最短等差数列的项数
    int ans = (a.back() - a.front()) / d + 1;
    cout << ans << endl;
    
    return 0;
}
